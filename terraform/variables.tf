variable "proxmox_api_url" {
  description = "URL to the Proxmox API"
  type        = string
  validation {
    condition     = can(regex("^https?://.*", var.proxmox_api_url))
    error_message = "The proxmox_api_url must be a valid URL starting with http:// or https://."
  }
}

variable "proxmox_user" {
  description = "Proxmox user to authenticate with"
  type        = string
}

variable "proxmox_password" {
  description = "Password for the Proxmox user; consider retrieving this from environment variables or a vault for better security"
  type        = string
  sensitive   = true
}

variable "proxmox_target_node" {
  description = "Target Proxmox node name"
  type        = string
}

variable "ssh_key_name" {
  description = "Name for the SSH key pair"
  type        = string
  default     = "k3s"
}

variable "overwrite_ssh_keys" {
  description = "Whether to overwrite existing SSH keys on disk. If false and keys exist, they will be reused. If false and keys don't exist, new ones will be generated."
  type        = bool
  default     = false
}

variable "vm_storage_type" {
  description = "Storage type for VM disks"
  type        = string
  default     = "local-zfs"
}

variable "vm_disk_size" {
  description = "Default size of the VM disk if not specified at the node level"
  type        = string
  default     = "40G"
}

variable "disk_size_validation" {
  description = "Regular expression to validate disk size format"
  type        = string
  default     = "^[0-9]+[MGT]$"
}

variable "vm_user" {
  description = "Username for VM access"
  type        = string
  default     = "sanjin"
}

variable "timeouts" {
  description = "Timeouts for various operations"
  type = object({
    create = string
    update = string
    delete = string
  })
  default = {
    create = "20m"
    update = "15m"
    delete = "10m"
  }
}

variable "run_validation" {
  description = "Whether to run validation tests after VM creation"
  type        = bool
  default     = false
}

variable "cleanup_ssh_keys" {
  description = "Whether to remove SSH keys on terraform destroy. If true, keys generated by Terraform will be removed during destroy. If false, they will be kept."
  type        = bool
  default     = false
}

# Variables for main Terraform configuration

# Proxmox configuration
variable "proxmox_node" {
  description = "Proxmox node name"
  type        = string
  default     = "pve"
}

# Cluster configuration
variable "cluster_name" {
  description = "Name of the K3s cluster"
  type        = string
  default     = "homelab"
}

# Compute resources
variable "control_plane_count" {
  description = "Number of control plane nodes"
  type        = number
  default     = 1
}

variable "worker_count" {
  description = "Number of worker nodes"
  type        = number
  default     = 2
}

variable "vm_image" {
  description = "Base VM image template name"
  type        = string
  default     = "ubuntu-cloud-20.04"
}

variable "vm_memory" {
  description = "Memory allocation per VM in MB"
  type        = number
  default     = 4096
}

variable "vm_cpu" {
  description = "CPU cores per VM"
  type        = number
  default     = 2
}

variable "vm_disk_size" {
  description = "Disk size for each VM in GB"
  type        = number
  default     = 40
}

variable "ssh_key_file" {
  description = "Path to SSH public key file"
  type        = string
  default     = "~/.ssh/id_rsa.pub"
}

# Network configuration
variable "network_name" {
  description = "Name of the network to use"
  type        = string
  default     = "default"
}

variable "network_cidr" {
  description = "CIDR range for the cluster network"
  type        = string
  default     = "192.168.1.0/24"
}

variable "create_network" {
  description = "Whether to create a new network"
  type        = bool
  default     = false
}

variable "enable_firewall" {
  description = "Whether to enable firewall rules"
  type        = bool
  default     = true
}

# Integration
variable "inventory_path" {
  description = "Path for generated Ansible inventory"
  type        = string
  default     = "../ansible"
}

# Tags
variable "owner_tag" {
  description = "Owner tag to apply to resources"
  type        = string
  default     = "admin"
}

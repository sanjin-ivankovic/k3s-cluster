#!/bin/bash
# Script to setup MinIO for Terraform remote state in a home lab environment

set -e

# Configuration
MINIO_HOST="${MINIO_HOST:-localhost}"
MINIO_PORT="${MINIO_PORT:-9000}"
MINIO_USER="${MINIO_USER:-minioadmin}"
MINIO_PASSWORD="${MINIO_PASSWORD:-minioadmin}"
BUCKET_NAME="${BUCKET_NAME:-terraform-state}"
TF_STATE_KEY="${TF_STATE_KEY:-k3s-cluster/terraform.tfstate}"

# Check dependencies
command -v docker >/dev/null 2>&1 || {
  echo "Docker is required but not installed. Please install Docker first."
  exit 1
}

command -v curl >/dev/null 2>&1 || {
  echo "curl is required but not installed. Please install curl first."
  exit 1
}

# Check if MinIO is already running
echo "Checking if MinIO is already running..."
docker ps | grep -q "minio/minio" && {
  echo "MinIO is already running. Using existing instance."
} || {
  echo "Starting MinIO container..."
  docker run -d \
    --restart=always \
    --name minio \
    -p 9000:9000 \
    -p 9001:9001 \
    -v ~/minio/data:/data \
    -e "MINIO_ROOT_USER=${MINIO_USER}" \
    -e "MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}" \
    minio/minio server /data --console-address ":9001"

  echo "Waiting for MinIO to start..."
  sleep 5
}

# Check if MinIO client is installed
command -v mc >/dev/null 2>&1 || {
  echo "MinIO client not found. Installing mc..."

  if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    curl -O https://dl.min.io/client/mc/release/darwin-amd64/mc
  else
    # Assume Linux
    curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
  fi

  chmod +x mc
  mv mc /usr/local/bin/ 2>/dev/null || sudo mv mc /usr/local/bin/
}

# Configure MinIO client
echo "Configuring MinIO client..."
mc alias set minio-local http://${MINIO_HOST}:${MINIO_PORT} ${MINIO_USER} ${MINIO_PASSWORD}

# Create bucket if it doesn't exist
echo "Creating bucket '${BUCKET_NAME}' if it doesn't exist..."
mc ls minio-local/${BUCKET_NAME} >/dev/null 2>&1 || {
  mc mb minio-local/${BUCKET_NAME}
  echo "Bucket created."
}

# Enable versioning on the bucket
echo "Enabling versioning on bucket..."
mc version enable minio-local/${BUCKET_NAME}

# Create backend.tf file
echo "Creating backend.tf file..."
cat > ../backend.tf <<EOF
# Generated by setup-remote-state.sh
# Remote state configuration for Terraform

terraform {
  backend "s3" {
    endpoint                    = "http://${MINIO_HOST}:${MINIO_PORT}"
    bucket                      = "${BUCKET_NAME}"
    key                         = "${TF_STATE_KEY}"
    region                      = "us-east-1"  # Can be any value for MinIO

    access_key                  = "${MINIO_USER}"
    secret_key                  = "${MINIO_PASSWORD}"

    force_path_style            = true
    skip_credentials_validation = true
    skip_region_validation      = true
    skip_metadata_api_check     = true
    skip_requesting_account_id  = true
  }
}
EOF

echo "====================================="
echo "MinIO is running at http://${MINIO_HOST}:${MINIO_PORT}"
echo "Console available at http://${MINIO_HOST}:9001"
echo "Username: ${MINIO_USER}"
echo "Password: ${MINIO_PASSWORD}"
echo "====================================="
echo "Remote state bucket '${BUCKET_NAME}' is configured"
echo "Terraform backend configuration created at ../backend.tf"
echo "Run 'terraform init' to initialize the backend"
echo "====================================="

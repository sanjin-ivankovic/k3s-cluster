---
# Tasks for deploying storage components

- name: Check if local-path storage class exists
  kubernetes.core.k8s_info:
    kind: StorageClass
    name: local-path
  register: local_path_sc
  failed_when: false

- name: Deploy Longhorn distributed storage
  when: deploy_longhorn | bool
  block:
    - name: Add Longhorn repository
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: https://charts.longhorn.io

    - name: Create namespace for Longhorn
      kubernetes.core.k8s:
        name: longhorn-system
        kind: Namespace
        state: present
        wait: yes

    - name: Install open-iscsi on all nodes
      ansible.builtin.package:
        name: open-iscsi
        state: present
      delegate_to: '{{ item }}'
      delegate_facts: true
      with_items:
        - "{{ groups['k3s_cluster'] }}"
      run_once: true

    - name: Install Longhorn
      kubernetes.core.helm:
        name: longhorn
        chart_ref: longhorn/longhorn
        release_namespace: longhorn-system
        values:
          persistence:
            defaultClass: '{{ longhorn_default_class | default(false) }}'
          defaultSettings:
            defaultReplicaCount: '{{ longhorn_replica_count | default(3) }}'

    - name: Wait for Longhorn to be ready
      kubernetes.core.k8s_info:
        kind: Deployment
        name: longhorn-ui
        namespace: longhorn-system
        wait: yes
        wait_timeout: 300
        wait_condition:
          type: Available
          status: 'True'

- name: Deploy NFS provisioner if configured
  when: deploy_nfs_provisioner | default(false) | bool
  block:
    - name: Add NFS subdir external provisioner repository
      kubernetes.core.helm_repository:
        name: nfs-subdir-external-provisioner
        repo_url: https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/

    - name: Install NFS subdir external provisioner
      kubernetes.core.helm:
        name: nfs-subdir-external-provisioner
        chart_ref: nfs-subdir-external-provisioner/nfs-subdir-external-provisioner
        release_namespace: kube-system
        values:
          nfs:
            server: '{{ nfs_server | mandatory }}'
            path: '{{ nfs_path | mandatory }}'
          storageClass:
            name: nfs-client
            defaultClass: '{{ nfs_default_class | default(false) }}'

- name: Display available StorageClasses
  kubernetes.core.k8s_info:
    kind: StorageClass
  register: storage_classes

- name: Report StorageClasses
  ansible.builtin.debug:
    msg: "Available StorageClasses: {{ storage_classes.resources | map(attribute='metadata.name') | list }}"
